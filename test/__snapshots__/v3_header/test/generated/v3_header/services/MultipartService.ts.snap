/**
 * generated using openapi-ts -- do no edit
 */
import type { ModelWithString } from '../models/ModelWithString';
import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';

export type TDataMultipartRequest = {
    formData?: {
        content?: Blob;
        data?: ModelWithString | null;
    };
};

export class MultipartService {
    /**
     * @throws ApiError
     */
    public static multipartRequest(data: TDataMultipartRequest = {}): CancelablePromise<void> {
        const { formData } = data;
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v{api-version}/multipart',
            formData: formData,
            mediaType: 'multipart/form-data',
        });
    }

    /**
     * @returns any OK
     * @throws ApiError
     */
    public static multipartResponse(): CancelablePromise<{
        file?: Blob;
        metadata?: {
            foo?: string;
            bar?: string;
        };
    }> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v{api-version}/multipart',
        });
    }
}
