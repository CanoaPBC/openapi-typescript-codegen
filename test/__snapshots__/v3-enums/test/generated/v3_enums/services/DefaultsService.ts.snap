import type { ModelWithString } from '../models/ModelWithString';
import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';

export type TDataCallWithDefaultParameters = {
    /**
     * This is a simple boolean with default value
     */
    parameterBoolean?: boolean | null;
    /**
     * This is a simple enum with default value
     */
    parameterEnum?: 'Success' | 'Warning' | 'Error';
    /**
     * This is a simple model with default value
     */
    parameterModel?: ModelWithString | null;
    /**
     * This is a simple number with default value
     */
    parameterNumber?: number | null;
    /**
     * This is a simple string with default value
     */
    parameterString?: string | null;
};
export type TDataCallWithDefaultOptionalParameters = {
    /**
     * This is a simple boolean that is optional with default value
     */
    parameterBoolean?: boolean;
    /**
     * This is a simple enum that is optional with default value
     */
    parameterEnum?: 'Success' | 'Warning' | 'Error';
    /**
     * This is a simple model that is optional with default value
     */
    parameterModel?: ModelWithString;
    /**
     * This is a simple number that is optional with default value
     */
    parameterNumber?: number;
    /**
     * This is a simple string that is optional with default value
     */
    parameterString?: string;
};
export type TDataCallToTestOrderOfParams = {
    /**
     * This is a optional string with default
     */
    parameterOptionalStringWithDefault?: string;
    /**
     * This is a optional string with empty default
     */
    parameterOptionalStringWithEmptyDefault?: string;
    /**
     * This is a optional string with no default
     */
    parameterOptionalStringWithNoDefault?: string;
    /**
     * This is a string that can be null with default
     */
    parameterStringNullableWithDefault?: string | null;
    /**
     * This is a string that can be null with no default
     */
    parameterStringNullableWithNoDefault?: string | null;
    /**
     * This is a string with default
     */
    parameterStringWithDefault?: string;
    /**
     * This is a string with empty default
     */
    parameterStringWithEmptyDefault?: string;
    /**
     * This is a string with no default
     */
    parameterStringWithNoDefault: string;
};

export class DefaultsService {
    /**
     * @throws ApiError
     */
    public static callWithDefaultParameters(data: TDataCallWithDefaultParameters = {}): CancelablePromise<void> {
        const {
            parameterBoolean = true,
            parameterEnum = 'Success',
            parameterModel = {
                prop: 'Hello World!',
            },
            parameterNumber = 123,
            parameterString = 'Hello World!',
        } = data;
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/v{api-version}/defaults',
            query: {
                parameterString,
                parameterNumber,
                parameterBoolean,
                parameterEnum,
                parameterModel,
            },
        });
    }

    /**
     * @throws ApiError
     */
    public static callWithDefaultOptionalParameters(
        data: TDataCallWithDefaultOptionalParameters = {}
    ): CancelablePromise<void> {
        const {
            parameterBoolean = true,
            parameterEnum = 'Success',
            parameterModel = {
                prop: 'Hello World!',
            },
            parameterNumber = 123,
            parameterString = 'Hello World!',
        } = data;
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/v{api-version}/defaults',
            query: {
                parameterString,
                parameterNumber,
                parameterBoolean,
                parameterEnum,
                parameterModel,
            },
        });
    }

    /**
     * @throws ApiError
     */
    public static callToTestOrderOfParams(data: TDataCallToTestOrderOfParams): CancelablePromise<void> {
        const {
            parameterOptionalStringWithDefault = 'Hello World!',
            parameterOptionalStringWithEmptyDefault = '',
            parameterOptionalStringWithNoDefault,
            parameterStringNullableWithDefault = null,
            parameterStringNullableWithNoDefault,
            parameterStringWithDefault = 'Hello World!',
            parameterStringWithEmptyDefault = '',
            parameterStringWithNoDefault,
        } = data;
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/v{api-version}/defaults',
            query: {
                parameterOptionalStringWithDefault,
                parameterOptionalStringWithEmptyDefault,
                parameterOptionalStringWithNoDefault,
                parameterStringWithDefault,
                parameterStringWithEmptyDefault,
                parameterStringWithNoDefault,
                parameterStringNullableWithNoDefault,
                parameterStringNullableWithDefault,
            },
        });
    }
}
